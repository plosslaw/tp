@startuml
!include style.puml

skinparam defaultFontSize 50

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":McSchedulerParser" as McSchedulerParser LOGIC_COLOR
participant ":RoleAddCommandParser" as RoleAddCommandParser LOGIC_COLOR
participant "<<class>>\n:ParserUtil" as ParserUtil LOGIC_COLOR

participant ":RoleAddCommand" as RoleAddCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "<<class>>\n:Role" as Role_CLASS MODEL_COLOR
participant ":Role" as Role MODEL_COLOR
participant ":ModelManager" as ModelManager MODEL_COLOR
participant ":McScheduler" as McScheduler MODEL_COLOR
participant ":UniqueRoleList" as UniqueRoleList MODEL_COLOR
end box

[-> LogicManager : execute("role-add Cashier")
activate LogicManager

LogicManager -> McSchedulerParser : parseCommand("role-add Cashier")
activate McSchedulerParser

create RoleAddCommandParser
McSchedulerParser -> RoleAddCommandParser
activate RoleAddCommandParser

RoleAddCommandParser --> McSchedulerParser
deactivate RoleAddCommandParser

McSchedulerParser -> RoleAddCommandParser : parse()
activate RoleAddCommandParser

RoleAddCommandParser -> ParserUtil : parseRole("Cashier")
activate ParserUtil

ParserUtil -> Role_CLASS : createRole("Cashier")
activate Role_CLASS

create Role
Role_CLASS -> Role
activate Role

return Cashier:Role
deactivate Role

Role_CLASS -> ParserUtil : Cashier:Role
deactivate Role_CLASS

ParserUtil -> RoleAddCommandParser : cashier:Role
deactivate ParserUtil

create RoleAddCommand
RoleAddCommandParser -> RoleAddCommand : RoleAddCommand(Cashier:Role)
activate RoleAddCommand


RoleAddCommand --> RoleAddCommandParser
deactivate RoleAddCommand

RoleAddCommandParser --> McSchedulerParser
deactivate RoleAddCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
RoleAddCommandParser -[hidden]-> McSchedulerParser
destroy RoleAddCommandParser

McSchedulerParser --> LogicManager
deactivate McSchedulerParser

LogicManager -> RoleAddCommand : execute(model)
activate RoleAddCommand

RoleAddCommand -> ModelManager : addRole(Cashier:Role)
activate ModelManager

ModelManager -> McScheduler : addRole(Cashier:Role)
activate McScheduler

McScheduler -> UniqueRoleList : add(Cashier:Role)
activate UniqueRoleList

UniqueRoleList -> McScheduler
deactivate UniqueRoleList

McScheduler -> ModelManager
deactivate McScheduler

ModelManager --> RoleAddCommand
deactivate ModelManager

create CommandResult
RoleAddCommand -> CommandResult
activate CommandResult

CommandResult --> RoleAddCommand
deactivate CommandResult

RoleAddCommand --> LogicManager : result
deactivate RoleAddCommand

[<--LogicManager
deactivate LogicManager
@enduml
